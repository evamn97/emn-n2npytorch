#!/bin/bash
# ----------------------------------------------------
# Last revised: 21 June 2022
# eva_mn
# ----------------------------------------------------

#SBATCH -o ../job-out-files/%x-%j.out                	  # Name of stdout output file
#SBATCH -p gtx                                          # Queue (partition) name
#SBATCH -N 1                                            # Total # of nodes
#SBATCH --ntasks-per-node 16                            # Total # of tasks per node (mpi tasks)
#SBATCH -t 00:05:00                                     # Run time (hh:mm:ss)
#SBATCH --mail-type=none                                # Send email at begin and end of job
#SBATCH -A Modeling-of-Microsca                         # Allocation name (req'd if you have more than 1)

start=$(date +%s)

# !!!----------------------------- SET INPUT VARS -----------------------------!!!
test_dir="tgx_data/test"
target_dir="tgx_data/test/targets"
data_info="Dataset: B&W TGX square pillars (22 imgs), 480/120/6 (train/val/test)\n"

noise="lower"
train_noise=$noise  # NOTE: assumes noise type is the same as training
param=0.35
results="results"
channels=3
# -------------------------------------------------------------------------------

echo "Date:  $(date)"

# get job number and name for file saving in python script, set some params
set -a
jobid=${SLURM_JOBID}
jobname=${SLURM_JOB_NAME}

# get job name for non-SLURM jobs
filename="$(basename -s .sh "$0")"
set +a    # only need to export job info vars

# get from SLURM env vars
echo -e "Begin batch job... \"${SLURM_JOB_NAME}\", #${SLURM_JOB_ID}\n"
echo -e "Output file: ${SLURM_JOB_NAME}-${SLURM_JOB_ID}.out \n\nPartition: ${SLURM_JOB_PARTITION} \t\tNodes: ${SLURM_JOB_NUM_NODES} \tNtasks per node: ${SLURM_TASKS_PER_NODE}"
echo -e "\n${data_info}"

cd ..
echo -e "Working directory:  $(pwd)\n"

# get ckpt name (NOTE: this only works for ckpt-overwrite=TRUE)
ckpt_name="ckpts/${jobname%"test"}train-${train_noise}/n2n-${train_noise}.pt"

# Launch code using pipenv virtual environment
pdm run python src/test.py \
  -t ${test_dir} \
  --target-dir ${target_dir} \
  -n ${noise} \
  -p ${param} \
  --output ${results} \
  --load-ckpt "${ckpt_name}" \
  --ch ${channels} \
  --cuda \
  --montage-only

end=$(date +%s)
runtime_hours=$(((end-start)/3600))
runtime_minutes=$((((end-start)%3600)/60))
runtime_seconds=$((((end-start)%3600)%60))
echo -e "\nBatch job runtime was ${runtime_hours}h:${runtime_minutes}m:${runtime_seconds}s.\n "
